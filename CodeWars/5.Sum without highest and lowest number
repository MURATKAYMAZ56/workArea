/*
Sum all the numbers of the array
( in F# and Haskell you get a list) except the highest and the lowest element
(the value, not the index!).
The highest / lowest element is respectively only one element at each edge, 
even if there are more than one with the same value!)


If array is empty, null or None, or
if only 1 Element exists,
return 0.

*/

function sumArray(array) {
    if (array && array.length > 1) {
        const maxNum = Math.max(...array);
        const minNum = Math.min(...array);
        const sum = array.reduce((a, b) => a + b, 0) - `${maxNum + minNum}`
        return sum;
    } else {
        return 0;
    }

}
console.log(sumArray())
////////////////akilli cozum

function sumArray(array) {
    return Array.isArray(array) && array.length > 1 ?
        array.reduce((s, n) => s + n, 0) - Math.min(...array) - Math.max(...array) :
        0
}